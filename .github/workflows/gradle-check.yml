name: Gradle Check

on:
  push:
    branches-ignore:
      - 'backport/**'
      - 'create-pull-request/**'
      - 'dependabot/**'
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  gradle-check:
    runs-on: ubuntu-latest
    timeout-minutes: 130
    steps:
      - name: Checkout OpenSearch repo
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Gradle Check
        run: ./gradlew check

      - name: Run specific test
        run: ./gradlew ':server:internalClusterTest' --tests "org.opensearch.discovery.ClusterManagerDisruptionIT.testIsolateClusterManagerAndVerifyClusterStateConsensus"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: '**/build/test-results/test'

      - name: Upload Coverage Report
        if: success()
        uses: codecov/codecov-action@v5
        with:
          files: ./codeCoverage.xml

      - name: Extract Test Failure
        if: failure()
        run: |
          TEST_FAILURES=$(find . -name "TEST-*.xml" -exec grep -h "<failure" {} + | sed 's/.*message="\([^"]*\)".*/\1/' | sort | uniq -c | sort -rn | head -n 10)
          if [[ -n "$TEST_FAILURES" ]]; then
            echo "test_failures<<EOF" >> $GITHUB_ENV
            echo "" >> $GITHUB_ENV
            echo "* **TEST FAILURES:**" >> $GITHUB_ENV
            echo '```' >> $GITHUB_ENV
            echo "$TEST_FAILURES" >> $GITHUB_ENV
            echo '```' >> $GITHUB_ENV
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Comment PR on Success
        if: success() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ Gradle check passed successfully!'
            })

      - name: Comment PR on Failure
        if: failure() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ Gradle check failed in the latest run. ${{ env.test_failures }}\n\nSee run: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
